incl_polarity = incl_polarity, TIC = TRUE)
}
if ("metadata" %in% grab_what) {
if (verbosity > 1) {
last_time <- RaMS:::timeReport(last_time, text = "Reading file metadata...")
}
output_data$metadata <- RaMS:::grabMzmlMetadata(xml_data = xml_data)
}
if (verbosity > 1) {
time_total <- round(difftime(Sys.time(), last_time),
digits = 2)
cat(time_total, units(time_total), "\n")
}
output_data
}
2+2
ms3_files[1]
ms3data <- new_grabMzmlData(ms3_files[1], grab_what = c("BPC", "MS1", "MS2", "MS3", "metadata"))
ms3data <- new_grabMzmlData(ms3_files[1], grab_what = c("BPC", "MS1", "MS2", "MS3", "metadata"), verbosity = 2)
new_grabMzmlMS3 <- function (xml_data, rtrange, file_metadata, incl_polarity) {
ms3_xpath <- "//d1:spectrum[d1:cvParam[@name=\"ms level\" and @value=\"3\"]]"
ms3_nodes <- xml2::xml_find_all(xml_data, ms3_xpath)
rt_vals <- RaMS:::grabSpectraRt(ms3_nodes)
fsnodes <- xml2::xml_find_all(ms3_nodes, "d1:scanList/d1:scan/d1:cvParam[@name=\"filter string\"]")
shortstrings <- gsub("FTMS \\+ c NSI d Full ms3 |@hcd30.00.*", "", xml_attr(fsnodes, "value"))
prepremz_vals <- as.numeric(gsub("@.*", "", shortstrings))
premz_vals <- as.numeric(gsub(".*cid30.00 ", "", shortstrings))
mz_vals <- RaMS:::grabSpectraMz(ms3_nodes, file_metadata)
int_vals <- RaMS:::grabSpectraInt(ms3_nodes, file_metadata)
data.table(rt = rep(rt_vals, lengths(mz_vals)),
prepremz = rep(prepremz_vals, lengths(mz_vals)),
premz = rep(premz_vals, lengths(mz_vals)),
fragmz = unlist(mz_vals),
int = as.numeric(unlist(int_vals)),
voltage = rep(rep(30, length(mz_vals)), lengths(mz_vals)))
}
new_grabMzmlData <- function (filename, grab_what, verbosity = 0, incl_polarity = FALSE,
mz = NULL, ppm = NULL, rtrange = NULL, prefilter = -1) {
if (verbosity > 1) {
cat(paste0("\nReading file ", basename(filename), "... "))
last_time <- Sys.time()
}
xml_data <- xml2::read_xml(filename)
RaMS:::checkNamespace(xml_data)
RaMS:::checkFileType(xml_data, "mzML")
rtrange <- RaMS:::checkRTrange(rtrange)
prefilter <- RaMS:::checkProvidedPrefilter(prefilter)
output_data <- list()
if ("everything" %in% grab_what) {
extra_grabs <- setdiff(grab_what, "everything")
if (any(c("MS1", "MS2", "BPC", "TIC", "metadata") %in%
extra_grabs) && verbosity > 0) {
message(paste("Heads-up: grab_what = `everything` includes",
"MS1, MS2, BPC, TIC, and meta data"))
message("Ignoring duplicate specification")
}
grab_what <- unique(c("MS1", "MS2", "BPC", "TIC", "metadata",
extra_grabs))
}
if (any(c("MS1", "MS2", "MS3", "DAD", "EIC", "EIC_MS2", "EIC_MS3",
"chroms") %in% grab_what)) {
file_metadata <- RaMS:::grabMzmlEncodingData(xml_data)
}
if ("MS1" %in% grab_what) {
if (verbosity > 1)
last_time <- RaMS:::timeReport(last_time, text = "Reading MS1 data...")
output_data$MS1 <- RaMS:::grabMzmlMS1(xml_data = xml_data, rtrange = rtrange,
file_metadata = file_metadata, incl_polarity = incl_polarity,
prefilter = prefilter)
}
if ("MS2" %in% grab_what) {
if (verbosity > 1)
last_time <- RaMS:::timeReport(last_time, text = "Reading MS2 data...")
output_data$MS2 <- RaMS:::grabMzmlMS2(xml_data = xml_data, rtrange = rtrange,
incl_polarity = incl_polarity, file_metadata = file_metadata)
}
if ("MS3" %in% grab_what) {
if (verbosity > 1)
last_time <- RaMS:::timeReport(last_time, text = "Reading MS3 data...")
output_data$MS3 <- new_grabMzmlMS3(xml_data = xml_data, rtrange = rtrange,
incl_polarity = incl_polarity, file_metadata = file_metadata)
}
if ("BPC" %in% grab_what) {
if (verbosity > 1)
last_time <- RaMS:::timeReport(last_time, text = "Reading BPC...")
output_data$BPC <- RaMS:::grabMzmlBPC(xml_data = xml_data, rtrange = rtrange,
incl_polarity = incl_polarity)
}
if ("TIC" %in% grab_what) {
if (verbosity > 1)
last_time <- RaMS:::timeReport(last_time, text = "Reading TIC...")
output_data$TIC <- RaMS:::grabMzmlBPC(xml_data = xml_data, rtrange = rtrange,
incl_polarity = incl_polarity, TIC = TRUE)
}
if ("metadata" %in% grab_what) {
if (verbosity > 1) {
last_time <- RaMS:::timeReport(last_time, text = "Reading file metadata...")
}
output_data$metadata <- RaMS:::grabMzmlMetadata(xml_data = xml_data)
}
if (verbosity > 1) {
time_total <- round(difftime(Sys.time(), last_time),
digits = 2)
cat(time_total, units(time_total), "\n")
}
output_data
}
ms3data <- new_grabMzmlData(ms3_files[1], grab_what = c("BPC", "MS1", "MS2", "MS3", "metadata"), verbosity = 2)
ms3data$MS3
install.packages("duckdb")
# Write ms3 data to DuckDB for Python ----
# https://www.metabolomicsworkbench.org/data/DRCCStudySummary.php?Mode=SetupRawDataDownload&StudyID=ST001661
# 10.1021/acs.analchem.0c04895
library(DBI)
con <- dbConnect(duckdb::duckdb(), "ms3_data/ms3_data.duckdb")
?dbWriteTable
dbWriteTable(con, "MS1", ms3data$MS1)
dbWriteTable(con, "MS2", ms3data$MS2)
dbWriteTable(con, "MS3", ms3data$MS3)
dbWriteTable(con, "BPC", ms3data$BPC)
dbGetQuery(con, "SELECT * FROM MS1 ORDER BY int DESC LIMIT 10")
ms3data$BPC %>% qplotMS1data()
ms3data$MS3
ms3data$MS3 %>% ggplot() +
geom_point(aes(x=premz, y=rt, color=prepremz))
plotly::ggplotly()
ms3data$MS3 %>% ggplot() +
geom_point(aes(x=premz, y=prepremz))
ms3data$MS3 %>% ggplot() +
geom_point(aes(x=premz, y=premz-prepremz))
ms3data$MS3 %>% ggplot() +
geom_point(aes(x=premz, y=prepremz-premz))
ms3data$MS1[mz%between%pmppm(310.1148)]
ms3data$MS1[mz%between%pmppm(281.11240398)]
ms3data$MS1[mz%between%pmppm(281.11240398)] %>%
qplotMS1data()
ms3data$metadata
ms3data$MS1[mz%between%pmppm(281.11240398+1.007276)] %>%
qplotMS1data()
ms3data$MS2[premz%between%pmppm(281.11240398+1.007276)]
ms3data$MS1[mz%between%pmppm(281.11240398+1.007276)] %>%
qplotMS1data() +
geom_vline(ms3data$MS2[premz%between%pmppm(281.11240398+1.007276)]$rt)
ms3data$MS1[mz%between%pmppm(281.11240398+1.007276)] %>%
qplotMS1data() +
geom_vline(xintercept=ms3data$MS2[premz%between%pmppm(281.11240398+1.007276)]$rt)
ms3data$MS2[premz%between%pmppm(281.11240398+1.007276)]
ms3data$MS1[mz%between%pmppm(281.11240398+1.007276)] %>%
filter(rt%between%c(20, 25)) %>%
qplotMS1data() +
geom_vline(xintercept=ms3data$MS2[premz%between%pmppm(281.11240398+1.007276)]$rt) +
geom_vline(xintercept=)
ms3data$MS1[mz%between%pmppm(281.11240398+1.007276)] %>%
filter(rt%between%c(20, 25)) %>%
qplotMS1data() +
geom_vline(xintercept=ms3data$MS2[premz%between%pmppm(281.11240398+1.007276)]$rt) +
geom_vline(xintercept=1)
ms3data$MS1[mz%between%pmppm(281.11240398+1.007276)] %>%
filter(rt%between%c(20, 25)) %>%
qplotMS1data() +
geom_vline(xintercept=ms3data$MS2[premz%between%pmppm(281.11240398+1.007276)]$rt) +
geom_vline(xintercept=20)
ms3data$MS3[prepremz%between%pmppm(281.11240398+1.007276)]
dbDisconnect(con)
ms3data$MS2[premz%between%pmppm(281.11240398+1.007276)]
ms3data$MS2[premz%between%pmppm(281.11240398+1.007276)] %>%
arrange(desc(int))
ms3data$MS3[premz%between%pmppm(166.07234)]
ms3data$MS3[premz%between%pmppm(166.07234)] %>%
ggplot() +
geom_point(aes(x=fragmz, y=int))
ms3data$BPC %>% qplotMS1data()
ms3data$BPC[rt%between%c(20, 25)] %>% qplotMS1data()
ms3data$BPC[rt%between%c(20, 25)] %>% qplotMS1data() + geom_point()
plotly::ggplotly()
ms3data$MS1[rt%between%c(21.48, 21.50)]
ms3data$MS1[rt%between%c(21.48, 21.50)] %>%
ggplot(aes(x=mz, y=int, xend=mz, yend=0)) +
geom_segment() + geom_point()
plotly::ggplotly()
ms3data$MS1[mz%between%pmppm(281.11240398+1.007276)] %>%
filter(rt%between%c(20, 25)) %>%
qplotMS1data() +
geom_vline(xintercept=ms3data$MS2[premz%between%pmppm(281.11240398+1.007276)]$rt)
ms3data$MS2[premz%between%pmppm(281.11240398+1.007276) & rt%between%c(21.48, 21.50)]
plotly::ggplotly()
ms3data$MS2[premz%between%pmppm(281.11240398+1.007276) & rt%between%c(21.1, 21.2)]
ms3data$MS2[premz%between%pmppm(281.11240398+1.007276) & rt%between%c(21.1, 21.2)] %>%
ggplot(aes(x=fragmz, y=int, xend=fragmz, yend=0)) +
geom_segment() + geom_point()
plotly::ggplotly()
ms3data$MS1[mz%between%pmppm(281.11240398+1.007276)] %>%
filter(rt%between%c(20, 25)) %>%
qplotMS1data() +
geom_vline(xintercept=ms3data$MS2[premz%between%pmppm(281.11240398+1.007276)]$rt)
ms3data$MS1[mz%between%pmppm(281.11240398+1.007276)] %>%
filter(rt%between%c(20, 25)) %>%
qplotMS1data() +
geom_vline(xintercept=ms3data$MS2[premz%between%pmppm(281.11240398+1.007276)]$rt) +
geom_vline(xintercept=ms3data$MS3[prepremz%between%pmppm(281.11240398+1.007276)]$rt, color="red")
ms3data$MS3[prepremz%between%pmppm(281.11240398+1.007276)]
ms3data$MS1[mz%between%pmppm(281.11240398+1.007276)] %>%
filter(rt%between%c(20, 25)) %>%
qplotMS1data() +
geom_vline(xintercept=ms3data$MS2[premz%between%pmppm(281.11240398+1.007276)]$rt) +
geom_vline(xintercept=unique(ms3data$MS3[prepremz%between%pmppm(281.11240398+1.007276)]$rt), color="red")
plotly::ggplotly()
ms3data$MS2[premz%between%pmppm(281.11240398+1.007276) & rt%between%c(20.9, 21)] %>%
ggplot(aes(x=fragmz, y=int, xend=fragmz, yend=0)) +
geom_segment() + geom_point()
ms3data$MS2[premz%between%pmppm(281.11240398+1.007276) & rt%between%c(21.8, 21.9)] %>%
ggplot(aes(x=fragmz, y=int, xend=fragmz, yend=0)) +
geom_segment() + geom_point()
ms3data$MS2[premz%between%pmppm(281.11240398+1.007276) & rt%between%c(21.1, 21.2)] %>%
ggplot(aes(x=fragmz, y=int, xend=fragmz, yend=0)) +
geom_segment() + geom_point()
ms3data$MS2[prepremz%between%pmppm(281.11240398+1.007276) &
premz%between%pmppm(166.07246) &
rt%between%c(20.9, 21)] %>%
ggplot(aes(x=fragmz, y=int, xend=fragmz, yend=0)) +
geom_segment() + geom_point()
ms3data$MS2[prepremz%between%pmppm(281.11240398+1.007276) &
premz%between%pmppm(166.07246) &
rt%between%c(20.9, 21)]
ms3data$MS2[(prepremz%between%pmppm(281.11240398+1.007276)) &
(premz%between%pmppm(166.07246)) &
(rt%between%c(20.9, 21))] %>%
ggplot(aes(x=fragmz, y=int, xend=fragmz, yend=0)) +
geom_segment() + geom_point()
ms3data$MS3[prepremz%between%pmppm(281.11240398+1.007276) &
premz%between%pmppm(166.07246) &
rt%between%c(20.9, 21)] %>%
ggplot(aes(x=fragmz, y=int, xend=fragmz, yend=0)) +
geom_segment() + geom_point()
ms3data$MS1[mz%between%pmppm(281.11240398+1.007276)] %>%
filter(rt%between%c(20, 25)) %>%
qplotMS1data() +
geom_vline(xintercept=ms3data$MS2[premz%between%pmppm(281.11240398+1.007276)]$rt) +
geom_vline(xintercept=unique(ms3data$MS3[prepremz%between%pmppm(281.11240398+1.007276)]$rt), color="red")
ms3data$MS1[mz%between%target_mz_range] %>%
filter(rt%between%c(20, 25)) %>%
qplotMS1data() +
geom_vline(xintercept=ms3data$MS2[premz%between%target_mz_range]$rt, color="red") +
geom_vline(xintercept=ms3data$MS3[prepremz%between%target_mz_range]$rt, color="orange")
target_mz_range <- pmppm(281.11240398+1.007276)
target_rt_range <- c(20.9, 21)
target_fragment <- pmppm(166.07246)
ms3data$MS1[mz%between%target_mz_range] %>%
filter(rt%between%c(20, 25)) %>%
qplotMS1data() +
geom_vline(xintercept=ms3data$MS2[premz%between%target_mz_range]$rt, color="red") +
geom_vline(xintercept=ms3data$MS3[prepremz%between%target_mz_range]$rt, color="orange")
ms3data$MS1[mz%between%target_mz_range] %>%
filter(rt%between%c(20, 22)) %>%
qplotMS1data() +
geom_vline(xintercept=ms3data$MS2[premz%between%target_mz_range]$rt, color="red") +
geom_vline(xintercept=ms3data$MS3[prepremz%between%target_mz_range]$rt, color="orange")
ms3data$MS1[mz%between%target_mz_range] %>%
filter(rt%between%c(20, 25)) %>%
qplotMS1data() +
geom_vline(xintercept=ms3data$MS2[premz%between%target_mz_range]$rt, color="red") +
geom_vline(xintercept=ms3data$MS3[prepremz%between%target_mz_range]$rt, color="orange")
ms3data$MS1[mz%between%target_mz_range] %>%
filter(rt%between%c(20, 25)) %>%
qplotMS1data() +
geom_vline(xintercept=ms3data$MS2[premz%between%target_mz_range]$rt, color="red") +
geom_vline(xintercept=ms3data$MS3[prepremz%between%target_mz_range]$rt, color="blue")
ms3data$MS2[premz%between%pmppm(281.11240398+1.007276) & rt%between%c(20.9, 21)] %>%
ggplot(aes(x=fragmz, y=int, xend=fragmz, yend=0)) +
geom_segment() + geom_point()
ms3data$MS3[prepremz%between%pmppm(281.11240398+1.007276) &
premz%between%pmppm(166.07246) &
rt%between%c(20.9, 21)] %>%
ggplot(aes(x=fragmz, y=int, xend=fragmz, yend=0)) +
geom_segment() + geom_point()
ms3data$MS1[mz%between%target_mz_range] %>%
qplotMS1data() +
geom_vline(xintercept=ms3data$MS2[premz%between%target_mz_range]$rt, color="red") +
geom_vline(xintercept=ms3data$MS3[prepremz%between%target_mz_range]$rt, color="blue")
ms3data$MS2[premz%between%pmppm(281.11240398+1.007276) & rt%between%c(20.9, 21)] %>%
ggplot(aes(x=fragmz, y=int, xend=fragmz, yend=0)) +
geom_segment() + geom_point()
2+2
ms3data$MS2[premz%between%pmppm(281.11240398+1.007276) & rt%between%c(20.9, 21)] %>%
ggplot(aes(x=fragmz, y=int, xend=fragmz, yend=0)) +
geom_segment() + geom_point()
ms3data$MS1[mz%between%target_mz_range] %>%
qplotMS1data() +
geom_vline(xintercept=ms3data$MS2[premz%between%target_mz_range]$rt, color="red") +
geom_vline(xintercept=ms3data$MS3[prepremz%between%target_mz_range]$rt, color="blue")
con <- dbConnect(duckdb::duckdb(), "ms3_data/ms3_data.duckdb")
dbWriteTable(con, "MS1", ms3data$MS1[rt%between%c(20, 25)], overwrite = TRUE)
dbWriteTable(con, "MS2", ms3data$MS2, overwrite = TRUE)
dbWriteTable(con, "MS3", ms3data$MS3, overwrite = TRUE)
dbWriteTable(con, "BPC", ms3data$BPC, overwrite = TRUE)
dbGetQuery(con, "SELECT * FROM MS1 ORDER BY int DESC LIMIT 10")
dbDisconnect(con)
target_mz_range <- pmppm(281.11240398+1.007276)
target_rt_range <- c(20.9, 21)
target_fragment <- pmppm(166.07246)
ms3data$MS1[mz%between%target_mz_range] %>%
qplotMS1data() +
geom_vline(xintercept=ms3data$MS2[premz%between%target_mz_range]$rt, color="red") +
geom_vline(xintercept=ms3data$MS3[prepremz%between%target_mz_range]$rt, color="blue")
con <- dbConnect(duckdb::duckdb(), "ms3_data/ms3_data.duckdb")
dbWriteTable(con, "MS1", ms3data$MS1[rt%between%c(20, 25)], overwrite = TRUE)
dbWriteTable(con, "MS2", ms3data$MS2, overwrite = TRUE)
dbWriteTable(con, "MS3", ms3data$MS3, overwrite = TRUE)
dbWriteTable(con, "BPC", ms3data$BPC, overwrite = TRUE)
dbGetQuery(con, "SELECT * FROM MS1 ORDER BY int DESC LIMIT 10")
dbDisconnect(con)
target_mz_range <- pmppm(281.11240398+1.007276)
target_rt_range <- c(20.9, 21)
target_fragment <- pmppm(166.07246)
ms3data$MS1[mz%between%target_mz_range] %>%
qplotMS1data() +
geom_vline(xintercept=ms3data$MS2[premz%between%target_mz_range]$rt, color="red") +
geom_vline(xintercept=ms3data$MS3[prepremz%between%target_mz_range]$rt, color="blue")
summary(ms3data$MS1)
ms3data <- new_grabMzmlData(ms3_files[1], grab_what = c("BPC", "MS1", "MS2", "MS3", "metadata"), verbosity = 2)
ms3data$MS1 <- ms3data$MS1[rt%between%c(20, 25)]
con <- dbConnect(duckdb::duckdb(), "ms3_data/ms3_data.duckdb")
dbWriteTable(con, "MS1", ms3data$MS1, overwrite = TRUE)
dbWriteTable(con, "MS2", ms3data$MS2, overwrite = TRUE)
dbWriteTable(con, "MS3", ms3data$MS3, overwrite = TRUE)
dbWriteTable(con, "BPC", ms3data$BPC, overwrite = TRUE)
dbGetQuery(con, "SELECT * FROM MS1 ORDER BY int DESC LIMIT 10")
dbDisconnect(con)
pmppm(281.11240398+1.007276)
con <- dbConnect(duckdb::duckdb(), "ms3_data/ms3_data.duckdb")
dbGetQuery(con, "SELECT * FROM MS1 WHERE mz BETWEEN 282.1186 AND 282.1208")
pmppm(166.07246)
ms1_data <- dbGetQuery(con, "SELECT * FROM MS1 WHERE mz BETWEEN 282.1186 AND 282.1208")
ms2_data <- dbGetQuery(con, "SELECT * FROM MS2 WHERE premz BETWEEN 282.1186 AND 282.1208")
ms3_data <- dbGetQuery(con, "SELECT * FROM MS3 WHERE prepremz BETWEEN 282.1186 AND 282.1208 AND
premz BETWEEN 166.0718 AND 166.0731")
qplotMS1data(ms1_data)
ggplot(ms1_data) + geom_line(aes(x=rt, y=int))
ggplot(ms2_data) + geom_point(aes(x=fragmz, y=int))
ggplot(ms3_data) + geom_point(aes(x=fragmz, y=int))
reticulate::repl_python()
# Write chrom data to SQLite for Julia
list.files("~/../Desktop/Will/PARAGON/mzMLS")
# Write chrom data to SQLite for Julia
list.files("~/../Desktop/Will/PARAGON/mzMLs/pos")
# Write chrom data to SQLite for Julia
list.files("~/../Desktop/Will/PARAGON/mzMLs/pos", pattern="Smp_Amm.*noIS")
library(tidyverse)
library(RaMS)
# Write chrom data to SQLite for Julia
list.files("~/../Desktop/Will/PARAGON/mzMLs/pos", pattern="Smp_Amm.*noIS", full.names = TRUE) %>%
str_subset("Blk", negate = TRUE)
out_files <- paste0("chrom_data/", basename(ms_files))
# Write chrom data to SQLite for Julia
ms_files <- "~/../Desktop/Will/PARAGON/mzMLs/pos" %>%
list.files(pattern="Smp_Amm.*noIS", full.names = TRUE) %>%
str_subset("Blk", negate = TRUE)
out_files <- paste0("chrom_data/", basename(ms_files))
out_files
146.06914219+1.007276
151.04940980+1.007276
minifyMSdata(ms_files, out_files, mz_include = c(147.0764, 147.0764+0.997035, 147.0764+0.997035*2,
118.0865, 118.0865+0.997035,
152.0567, 152.0567+0.997035*5))
minifyMSdata(ms_files, out_files, mz_include = c(147.0764, 147.0764+0.997035, 147.0764+0.997035*2,
118.0865, 118.0865+0.997035,
152.0567, 152.0567+0.997035*5), ppm = 20)
unique(warnings())
ms_files <- list.files("chrom_data", pattern = ".mzML", full.names = TRUE)
msdata <- grabMSdata(ms_files, grab_what = "MS1")
nrow(msdata$MS1)
sapply(c(147.0764, 147.0764+0.997035, 147.0764+0.997035*2), function(mz_i){
msdata$MS1[mz%between%pmppm(mz_i, 10)] %>%
qplotMS1data() %>%
print()
})
head(msdata$MS1)
msdata$MS1$timepoint <- str_extract(msdata$MS1$filename, "T\\d+")
sapply(c(147.0764, 147.0764+0.997035, 147.0764+0.997035*2), function(mz_i){
msdata$MS1[mz%between%pmppm(mz_i, 10)] %>%
qplotMS1data(color_col = "timepoint") %>%
print()
})
sapply(c(147.0764, 147.0764+0.997035, 147.0764+0.997035*2), function(mz_i){
msdata$MS1[mz%between%pmppm(mz_i, 10)][rt%between%c(10, 12)] %>%
qplotMS1data(color_col = "timepoint") %>%
print()
})
library(DBI)
con <- dbConnect(RSQLite::SQLite(), "chrom_data/chrom_data.sqlite")
dbExecute(con, "DROP TABLE IF EXISTS MS1")
dbWriteTable(con, "MS1", msdata$MS1, overwrite = TRUE)
dbDisconnect(con)
147.0764+0.997035
147.0764+0.997035*2
JuliaCall::julia_source("chrom_script.jl")
library(tidyverse)
library(RaMS)
library(arrow)
open_dataset("imzml_data/pqds") %>%
filter(mz%between%pmppm(421.3111, 10) | mz%between%pmppm(281.2484, 10)) %>%
mutate(mz=paste("m/z =", round(mz, 2))) %>%
collect() %>%
ggplot(aes(x, y, fill=int)) + geom_raster() + facet_grid(mz~filename)
open_dataset("imzml_data/pqds") %>%
filter(mz%between%pmppm(421.3111, 10) | mz%between%pmppm(281.2484, 10)) %>%
mutate(mz=paste("m/z =", round(mz, 2))) %>%
mutate(filename=str_remove(filename, "-centroid")) %>%
collect() %>%
ggplot() +
geom_raster(aes(x, y, fill=log10(int))) +
ggh4x::facet_grid2(mz~filename, scales="free", independent="y") +
scale_fill_gradientn(colors=viridis::viridis(10, direction = -1),
breaks=c(1:4), labels=10^(1:4), name="Intensity") +
scale_x_continuous(expand = expansion(), name = "DESI IMS X-coordinate") +
scale_y_continuous(expand = expansion(), name = "DESI IMS Y-coordinate") +
theme_bw() +
theme(legend.position = "inside",
legend.position.inside = c(1, 0.5),
legend.justification = c(1, 0.5),
legend.background = element_rect(fill="#FFFFFF", color="black"))
out_gp <- open_dataset("imzml_data/pqds") %>%
filter(mz%between%pmppm(421.3111, 10) | mz%between%pmppm(281.2484, 10)) %>%
mutate(mz=paste("m/z =", round(mz, 2))) %>%
mutate(filename=str_remove(filename, "-centroid")) %>%
collect() %>%
ggplot() +
geom_raster(aes(x, y, fill=log10(int))) +
ggh4x::facet_grid2(mz~filename, scales="free", independent="y") +
scale_fill_gradientn(colors=viridis::viridis(10, direction = -1),
breaks=c(1:4), labels=10^(1:4), name="Intensity") +
scale_x_continuous(expand = expansion(), name = "DESI IMS X-coordinate") +
scale_y_continuous(expand = expansion(), name = "DESI IMS Y-coordinate") +
theme_bw() +
theme(legend.position = "inside",
legend.position.inside = c(1, 0.5),
legend.justification = c(1, 0.5),
legend.background = element_rect(fill="#FFFFFF", color="black"))
out_gp <- open_dataset("imzml_data/pqds") %>%
filter(mz%between%pmppm(421.3111, 10) | mz%between%pmppm(281.2484, 10)) %>%
mutate(mz=paste("m/z =", round(mz, 2))) %>%
mutate(filename=str_remove(filename, "-centroid")) %>%
collect() %>%
ggplot() +
geom_raster(aes(x, y, fill=log10(int))) +
ggh4x::facet_grid2(mz~filename, scales="free", independent="y") +
scale_fill_gradientn(colors=viridis::viridis(10, direction = -1),
breaks=c(1:4), labels=10^(1:4), name="Intensity") +
scale_x_continuous(expand = expansion(), name = "DESI IMS X-coordinate") +
scale_y_continuous(expand = expansion(), name = "DESI IMS Y-coordinate") +
theme_bw() +
theme(legend.position = "inside",
legend.position.inside = c(1, 0.5),
legend.justification = c(1, 0.5),
legend.background = element_rect(fill="#FFFFFF", color="black"))
ggsave("imzml_arrow_R_fig.png", plot = out_gp, device = "png", width = 3, height = 2, units = "in", dpi = 600)
out_gp <- open_dataset("imzml_data/pqds") %>%
filter(mz%between%pmppm(421.3111, 10) | mz%between%pmppm(281.2484, 10)) %>%
mutate(mz=paste("m/z =", round(mz, 2))) %>%
mutate(filename=str_remove(filename, "-centroid")) %>%
collect() %>%
ggplot() +
geom_raster(aes(x, y, fill=log10(int))) +
ggh4x::facet_grid2(mz~filename, scales="free", independent="y") +
scale_fill_gradientn(colors=viridis::viridis(10, direction = -1),
breaks=c(1:4), labels=10^(1:4), name="Intensity") +
scale_x_continuous(expand = expansion(), name = "DESI IMS X-coordinate") +
scale_y_continuous(expand = expansion(), name = "DESI IMS Y-coordinate") +
theme_bw() +
theme(legend.position = "inside",
legend.position.inside = c(1, 0),
legend.justification = c(1, 0),
legend.background = element_rect(fill="#FFFFFF", color="black"))
out_gp
out_gp <- open_dataset("imzml_data/pqds") %>%
filter(mz%between%pmppm(421.3111, 10) | mz%between%pmppm(281.2484, 10)) %>%
mutate(mz=paste("m/z =", round(mz, 2))) %>%
mutate(filename=str_remove(filename, "-centroid")) %>%
collect() %>%
ggplot() +
geom_raster(aes(x, y, fill=log10(int))) +
ggh4x::facet_grid2(mz~filename, scales="free", independent="y") +
scale_fill_gradientn(colors=viridis::viridis(10, direction = -1),
breaks=c(1:4), labels=10^(1:4), name="Intensity") +
scale_x_continuous(expand = expansion(), name = "DESI IMS X-coordinate") +
scale_y_continuous(expand = expansion(), name = "DESI IMS Y-coordinate") +
theme_bw() +
theme(legend.position = "inside",
legend.position.inside = c(1, 0.5),
legend.justification = c(1, 0.5),
legend.background = element_rect(fill="#FFFFFF", color="black"))
out_gp
out_gp <- open_dataset("imzml_data/pqds") %>%
filter(mz%between%pmppm(421.3111, 10) | mz%between%pmppm(281.2484, 10)) %>%
mutate(mz=paste("m/z =", round(mz, 2))) %>%
mutate(filename=str_remove(filename, "-centroid")) %>%
collect() %>%
ggplot() +
geom_raster(aes(x, y, fill=log10(int))) +
ggh4x::facet_grid2(mz~filename, scales="free", independent="y") +
scale_fill_gradientn(colors=viridis::viridis(10, direction = -1),
breaks=c(1:4), labels=10^(1:4), name="Intensity") +
scale_x_continuous(expand = expansion(), name = "DESI IMS X-coordinate") +
scale_y_continuous(expand = expansion(), name = "DESI IMS Y-coordinate") +
theme_bw() +
theme(legend.position = "inside",
legend.position.inside = c(1, 0.5),
legend.justification = c(1, 0.5),
legend.background = element_rect(fill="#FFFFFF", color="black"))
ggsave("imzml_arrow_R_fig.png", plot = out_gp, device = "png", width = 6, height = 4, units = "in", dpi = 600)
source("C:/Users/Owner/Desktop/Will/mzsql/metsoc_poster/imzml_script.R", echo = TRUE)
reticulate::repl_python()
